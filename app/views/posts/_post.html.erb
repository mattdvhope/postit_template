<div class="row">
  <div id="post_vote_error_<%= post.to_param %>" class='alert alert-error' style='display: none'>
    You are only allowed to vote once.        
  </div>
  <div class='span0 well text-center'>
    <% if logged_in? %>
      <%= link_to vote_post_path(post, vote: true), method: 'post', remote: true do %> <!-- (1) Putting method: 'post' here allows us to be semantically correct in routes.rb (using post :vote rather than get :vote) which would have worked 'better', but not semantically correct in routes.rb. (2) remote: true provides the js for AJAX here; the js in rails is looking for data-remote in our html - that is provided by this 'remote: true' here. -->
        <i class='icon-arrow-up'></i>
      <% end %>
      <br/>
    <% end %>

    <span id='post_<%= post.slug %>_votes'><%= post.total_votes %> votes</span>
    <br/>

    <% if logged_in? %>
      <%= link_to vote_post_path(post, vote: false), method: 'post', remote: true do %>
        <i class='icon-arrow-down'></i>
      <% end %>
      <br/>
    <% end %>

  </div>
  <div class="span8 well">
    <%= render post.categories %>
    <h4><%= link_to post.title, post_path(post) %></h4>
    <p><%= link_to clean_url(post.url), fix_url(post.url) %></p>
    <%  if logged_in? %>
      <p>[<%= link_to 'edit', edit_post_path(post) %>]</p>
    <% end %>
    <p><%= post.description %></p>
    <p>
      <span class="quiet">posted by</span> <%= link_to post.creator.username, user_path(post.creator) %>
      <small>at <%= display_datetime(post.created_at) %></small>
    </p>
    <small>
      <span>
        <%= link_to("#{post.comments.size} comments", post_path(post)) %>
      </span>
    </small>
  </div>
</div>